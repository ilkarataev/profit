name: Deploy Universal Application

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Domain name'
        required: true
        default: 'web.test.ru'
        type: string
      client_name:
        description: 'Client identifier'
        required: true
        default: 'main'
        type: string
      action:
        description: 'Action'
        required: true
        default: 'deploy'
        type: choice
        options: [deploy, update]

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Check DNS resolution
        run: |
          echo "🔍 Checking DNS resolution for ${{ inputs.domain }}..."
          DNS_IP=$(dig +short ${{ inputs.domain }} | head -n1)
          if [ -z "$DNS_IP" ]; then
            echo "❌ DNS record for ${{ inputs.domain }} not found!"
            echo "Please configure DNS A record pointing to your server"
            echo "::error::DNS resolution failed for ${{ inputs.domain }}"
            exit 1
          else
            echo "✅ DNS: ${{ inputs.domain }} -> $DNS_IP"
          fi

      - name: Install Ansible collections
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ghcr.io/ansible/creator-ee:latest \
            ansible-galaxy collection install -r ansible/requirements.yml

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ inputs.domain }} >> ~/.ssh/known_hosts

      - name: Deploy / Update
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace/ansible \
            -e ANSIBLE_HOST_KEY_CHECKING=False \
            ghcr.io/ansible/creator-ee:latest \
            ansible-playbook -i "${{ inputs.domain }}," deploy-universal.yml \
              -u appuser \
              -e "site_domain=${{ inputs.domain }}" \
              -e "client_name=${{ inputs.client_name }}" \
              -e "avito_api_url=${{ vars[format('{0}_AVITO_API_URL', inputs.client_name)] }}" \
              -e "hh_client_id=${{ vars[format('{0}_HH_CLIENT_ID', inputs.client_name)] }}" \
              -e "hh_client_secret=${{ secrets[format('{0}_HH_CLIENT_SECRET', inputs.client_name)] }}" \
              -e "hh_api_url=${{ vars[format('{0}_HH_API_URL', inputs.client_name)] }}" \
              -e "webhook_url_avito=${{ vars[format('{0}_WEBHOOK_URL_AVITO', inputs.client_name)] }}" \
              -e "webhook_url_hh=${{ vars[format('{0}_WEBHOOK_URL_HH', inputs.client_name)] }}" \
              -e "sentry_dsn=${{ secrets[format('{0}_SENTRY_DSN', inputs.client_name)] }}" \
              $([ "${{ inputs.action }}" = "update" ] && echo "--tags update")

      - name: Cleanup SSH key
        if: always()
        run: ssh-add -D || true
