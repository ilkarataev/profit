---
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
- name: Server setup for applications deployment
  hosts: all
  user: root
  become: true
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    site_domain: "{{ site_domain | default('web.test.ru') }}"
    user_name: appuser
  vars_files:
    - ssh_key.yml

  tasks:
    - name: Install Docker Engine & compose plugin
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-compose
        state: present
        update_cache: yes

    - name: Ensure docker service is running
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Add appuser to docker group
      ansible.builtin.user:
        name: "{{ user_name }}"
        groups: docker
        append: yes

    - name: Install Docker Compose V2 (if needed)
      ansible.builtin.shell: |
        if ! command -v docker compose >/dev/null 2>&1; then
          echo "Installing Docker Compose V2..."
          curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
        else
          echo "Docker Compose V2 already installed"
        fi
      ignore_errors: yes

    - name: Check SSH key exists
      stat:
        path: "{{ ansible_ssh_private_key_file | default('~/.ssh/id_rsa') }}"
      register: ssh_key_file
      delegate_to: localhost
      run_once: true
      become: no

    - name: Fail if SSH key not found
      fail:
        msg: "SSH private key not found at {{ ansible_ssh_private_key_file | default('~/.ssh/id_rsa') }}. Please ensure SSH key is properly configured."
      when: not ssh_key_file.stat.exists
      delegate_to: localhost
      run_once: true
      become: no

    - name: Check DNS resolution
      command: dig +short {{ site_domain }}
      register: dns_result
      delegate_to: localhost
      run_once: true
      become: no
      ignore_errors: yes

    - name: Fail if DNS not configured
      fail:
        msg: "DNS record for {{ site_domain }} not found or not pointing to this server. Please configure DNS A record first."
      when: dns_result.rc != 0 or dns_result.stdout == ""
      delegate_to: localhost
      run_once: true
      become: no

    - name: Get server IP address
      command: hostname -I | awk '{print $1}'
      register: server_ip
      delegate_to: "{{ ansible_host }}"
      run_once: true

    - name: Verify DNS points to this server
      fail:
        msg: "DNS record for {{ site_domain }} points to {{ dns_result.stdout.strip() }}, but this server IP is {{ server_ip.stdout.strip() }}. Please update DNS A record."
      when: dns_result.stdout.strip() != server_ip.stdout.strip()
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display server setup information
      debug:
        msg: |
          ========================================
          –ù–ê–°–¢–†–û–ô–ö–ê –°–ï–†–í–ï–†–ê –î–õ–Ø –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–ô
          –î–æ–º–µ–Ω: {{ site_domain }}
          DNS IP: {{ dns_result.stdout.strip() }}
          Server IP: {{ server_ip.stdout.strip() }}
          –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ user_name }}
          ========================================
      delegate_to: localhost
      run_once: true
      become: no

    - name: Create user {{ user_name }}
      user:
        name: "{{ user_name }}"
        state: present
        shell: /bin/bash

    - name: Create .ssh directory for {{ user_name }}
      file:
        path: "/home/{{ user_name }}/.ssh"
        state: directory
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: '0700'

    - name: Add authorized key for {{ user_name }}
      authorized_key:
        user: "{{ user_name }}"
        state: present
        key: "{{ ssh_public_key }}"

    - name: Create project directory for {{ user_name }}
      file:
        path: "/home/{{ user_name }}/app_project"
        state: directory
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: '0755'

    - name: Add history settings to .bashrc
      lineinfile:
        path: "/home/{{ user_name }}/.bashrc"
        state: present
        create: yes
        line: "{{ item }}"
      with_items:
        - 'export HISTSIZE=10000'
        - 'export HISTFILESIZE=10000'
        - 'export HISTCONTROL=ignoreboth:erasedups'
        - 'export HISTTIMEFORMAT="%d.%m.%Y %H:%M:%S: "'
        - 'PROMPT_COMMAND="history -a"'
        - 'export COMPOSE_FILE=docker-compose-production.yml'
        - '# Application Environment'
      become: true
      become_user: "{{ user_name }}"

    - name: Display setup completion
      debug:
        msg: |
          ========================================
          –ù–ê–°–¢–†–û–ô–ö–ê –°–ï–†–í–ï–†–ê –ó–ê–í–ï–†–®–ï–ù–ê
          –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ user_name }}
          –ü—Ä–æ–µ–∫—Ç: /home/{{ user_name }}/app_project
          –î–æ–º–µ–Ω: {{ site_domain }}
          ========================================
          –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –Ω–∏–∂–µ
          ========================================
      delegate_to: localhost
      run_once: true
      become: no

- import_playbook: common-setup.yml
  vars:
    site_domain: "{{ site_domain }}"
    user_name: "{{ user_name }}"


- name: Display final credentials
  hosts: all
  gather_facts: false
  tasks:
    - name: Get common password
      shell: cat /opt/portainer/portainer_password 2>/dev/null || echo "Password not found"
      register: portainer_password
      run_once: true

    - name: Display header
      debug:
        msg: "======================================="
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display credentials title
      debug:
        msg: "üîê –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display separator
      debug:
        msg: "======================================="
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display Portainer section
      debug:
        msg: "üê≥ PORTAINER:"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display Portainer URL
      debug:
        msg: "URL: https://{{ site_domain }}/portainer/"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display empty line
      debug:
        msg: ""
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display Traefik section
      debug:
        msg: "üö¶ TRAEFIK DASHBOARD:"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display Traefik URL
      debug:
        msg: "URL: https://{{ site_domain }}/traefik/"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display empty line
      debug:
        msg: ""
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display common credentials
      debug:
        msg: "üë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: admin"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display common password
      debug:
        msg: "üîë –ü–ê–†–û–õ–¨: {{ portainer_password.stdout }}"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display separator
      debug:
        msg: "======================================="
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display warning
      debug:
        msg: "‚ö†Ô∏è  –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!"
      delegate_to: localhost
      run_once: true
      become: no

    - name: Display footer
      debug:
        msg: "======================================="
      delegate_to: localhost
      run_once: true
      become: no

