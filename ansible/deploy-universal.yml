---
- name: Deploy Universal Application
  hosts: all
  gather_facts: false
  vars:
    app_user: appuser
    app_dir: /home/{{ app_user }}/{{ client_name | default('main') }}
    client_name: "{{ client_name | default('main') }}"
    compose_file: docker-compose-universal.yml
    redis_user: "{{ redis_user | default('') }}"
    avito_api_url: "{{ avito_api_url | default('https://api.avito.ru') }}"
    hh_api_url: "{{ hh_api_url | default('https://api.hh.ru') }}"
    sentry_dsn: "{{ sentry_dsn | default('') }}"
    hh_client_id: "{{ hh_client_id | default('') }}"
    hh_client_secret: "{{ hh_client_secret | default('') }}"
    webhook_url_avito: "{{ webhook_url_avito | default('') }}"
    webhook_url_hh: "{{ webhook_url_hh | default('') }}"

  tasks:
    - name: Generate Redis password
      set_fact:
        redis_password: "{{ lookup('password', '/tmp/redis_password_' + client_name + '.txt', length=32) }}"
      when: redis_password is not defined or redis_password == ""

    - name: Display deployment information
      debug:
        msg:
          - "========================================="
          - "üöÄ UNIVERSAL APPLICATION DEPLOYMENT"
          - "========================================="
          - "üåê Domain: {{ site_domain }}"
          - "üë§ Client: {{ client_name }}"
          - "üîó IP Address: {{ ansible_host }}"
          - "üîê Redis Password: {{ redis_password }}"
          - "üìÅ Playbook dir: {{ playbook_dir }}"
          - "üìÅ Project root: {{ playbook_dir | dirname }}"
          - "üìÅ App dir: {{ app_dir }}"
          - "========================================="

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Set project root directory
      set_fact:
        project_root: "{{ playbook_dir | dirname }}"

    - name: Check if source files exist
      stat:
        path: "{{ item }}"
      register: source_files
      loop:
        - "{{ project_root }}/avito-main"
        - "{{ project_root }}/hh-main"
        - "{{ project_root }}/docker-compose-universal.yml"

    - name: Display source file status
      debug:
        msg: "{{ item.item }}: {{ 'exists' if item.stat.exists else 'missing' }}"
      loop: "{{ source_files.results }}"

    - name: Create application archive locally
      local_action:
        module: archive
        path:
          - "{{ project_root }}/avito-main"
          - "{{ project_root }}/hh-main"
          - "{{ project_root }}/docker-compose-universal.yml"
        dest: "/tmp/app-{{ client_name }}.tar.gz"
        format: gz
        mode: '0644'

    - name: Copy application archive to server
      copy:
        src: "/tmp/app-{{ client_name }}.tar.gz"
        dest: "{{ app_dir }}/app-{{ client_name }}.tar.gz"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'

    - name: Extract application archive
      unarchive:
        src: "{{ app_dir }}/app-{{ client_name }}.tar.gz"
        dest: "{{ app_dir }}/"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        remote_src: yes

    - name: Clean up archive file on server
      file:
        path: "{{ app_dir }}/app-{{ client_name }}.tar.gz"
        state: absent

    - name: Clean up local archive file
      local_action:
        module: file
        path: "/tmp/app-{{ client_name }}.tar.gz"
        state: absent

    - name: Create environment file
      template:
        src: env-universal.j2
        dest: "{{ app_dir }}/.env"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0600'
      vars:
        client_name: "{{ client_name }}"
        site_domain: "{{ site_domain }}"
        redis_password: "{{ redis_password }}"
        avito_api_url: "{{ avito_api_url | default('https://api.avito.ru') }}"
        hh_client_id: "{{ hh_client_id }}"
        hh_client_secret: "{{ hh_client_secret }}"
        hh_api_url: "{{ hh_api_url | default('https://api.hh.ru') }}"
        webhook_url_avito: "{{ webhook_url_avito }}"
        webhook_url_hh: "{{ webhook_url_hh }}"
        BASE_URL: "https://{{ site_domain }}"
        BASE_URL_AVITO: "https://{{ site_domain }}/avito"
        BASE_URL_HH: "https://{{ site_domain }}/hh"
        sentry_dsn: "{{ sentry_dsn | default('') }}"

    - name: Create docker-compose file
      template:
        src: docker-compose-universal.j2
        dest: "{{ app_dir }}/docker-compose-universal.yml"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'
      vars:
        client_name: "{{ client_name }}"
        site_domain: "{{ site_domain }}"

    - name: Create app network for client
      community.docker.docker_network:
        name: "app-network-{{ client_name }}"
        state: present

    - name: Connect Traefik to client network
      command: "docker network connect app-network-{{ client_name }} traefik"
      ignore_errors: yes





    - name: Deploy application
      community.docker.docker_compose_v2:
        project_src: "{{ app_dir }}"
        files:
          - "{{ compose_file }}"
        state: present
        remove_orphans: yes
        recreate: always
        build: yes
      become: yes
      become_user: "{{ app_user }}"

    - name: Wait for services to start
      pause:
        seconds: 10

    - name: Check service health
      community.docker.docker_container_info:
        name: "{{ item }}"
      register: container_info
      loop:
        - "avito-{{ client_name }}"
        - "hh-{{ client_name }}"
        - "redis-{{ client_name }}"

    - name: Display service status
      debug:
        msg:
          - "========================================="
          - "‚úÖ DEPLOYMENT COMPLETED"
          - "========================================="
          - "üåê Domain: https://{{ site_domain }}"
          - "üîó IP Address: {{ ansible_host }}"
          - "üë§ Client: {{ client_name }}"
          - "üîê Redis Password: {{ redis_password }}"
          - "========================================="
          - "üì± Services:"
          - "  ‚Ä¢ Avito API: https://{{ site_domain }}/avito/"
          - "  ‚Ä¢ HH API: https://{{ site_domain }}/hh/"
          - "  ‚Ä¢ Redis: redis-{{ client_name }} (password: {{ redis_password }})"
          - "========================================="
          - "üê≥ Portainer: https://{{ site_domain }}/portainer/"
          - "üö¶ Traefik: https://{{ site_domain }}/traefik/"
          - "========================================="
